@model OrdersViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="view-all-orders">
    <div class="search-row">
        @if (ViewData["Role"].ToString().ToLower() == "role")
        {
            <button type="button" class="btn btn-primary"><a asp-action="CreateOrder">Create Order</a><i class="fa fa-plus" aria-hidden="true"></i></button>
        }
        

        <div class="search-create-order d-flex align-items-center gap-3">
            <div class="search-by-group d-flex align-items-center gap-2">
                <h6 class="m-0">Search by:</h6>
                <select id="SearchBy" name="SearchBy" class="form-control">
                    <option value="OrderNumber">Order Number</option>
                    <option value="OrderType">Order Type</option>
                    <option value="OrderDate">Create Date</option>
                </select>
            </div>

       
            <div class="input-group">
                <div class="form-outline">
                    <input type="search" id="form1" placeholder="Search..." class="form-control" />
                </div>
                <button id="searchBtn" type="button" class="btn btn-primary">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>
    </div>

    <div id="orders-row" class="orders-row d-flex align-items-center">
        @foreach (var item in Model.Orders)
        {
            <div class="order-item d-flex flex-column">
                <div class="d-flex flex-column gap-1 order-item-content">
                    <p class="m-0">Order number: <span>@Html.DisplayFor(modelItem => item.OrderNumber)</span></p>
                    <p class="m-0">Order type: <span>@Html.DisplayFor(modelItem => item.OrderType)</span></p>
                    <p class="m-0">Order status: <span>@Html.DisplayFor(modelItem => item.OrderStatus)</span></p>
                    <p class="m-0">Customer name: <span>@Html.DisplayFor(modelItem => item.CustomerName)</span></p>
                    <p class="m-0">Create Date: <span>@Html.DisplayFor(modelItem => item.OrderDate)</span></p>
                </div>

                
                <div class="edit-or-delete d-flex align-items-center justify-space-between">
                    @if (ViewData["Role"].ToString().ToLower() == "role")
                    {
                        <button type="button" class="btn btn-primary edit">

                            <a asp-action="Edit" asp-route-id="@item.OrderID" class="">
                                <span>
                                    Edit
                                </span><i class="fa-solid fa-pen-to-square"></i>
                            </a>
                        </button>
                    }
                    


                    <form asp-action="DeleteItem" id="@item.OrderID" asp-route-OrderId="@item.OrderID">
                        @if (ViewData["Role"].ToString().ToLower() == "role")
                        {
                            <button type="submit" class="btn btn-danger delete"
                                    onclick="return confirm('Are you sure to delete this record?')">
                                <span>Delete</span>
                                <i class="far fa-trash-alt"></i>
                            </button>
                        }
                        
                    </form>
                </div>

                <button type="button" id="order-lines" class="btn btn-primary order-lines">
                    <span>View lines</span>
                </button>
            </div>
        }
    </div>

    <div id="order-lines-grid" class="order-lines-grid">
        <!-- Grid for displaying order lines will be added dynamically here -->
    </div>
    
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {

            $('.order-item .order-lines').click(function () {
                var orderItem = $(this).closest('.order-item');

                var orderLinesGrid = $('#order-lines-grid');
                var isVisible = orderLinesGrid.is(':visible');

                var button = $(this);

                if(!isVisible){
                    var keyId = orderItem.find('form').attr('id');
                    console.log(keyId);

                    $.ajax({
                        url: '/Order/GetOrderLines',
                        type: 'POST',
                        data: { keyVal: keyId },
                        success: function (data) {
                            orderLinesGrid.html(
                                data
                            );
                        }
                    });
                }

                orderLinesGrid.toggle(!isVisible);

                if (!isVisible) {
                    button.text('Close');
                } else {
                    button.text('View lines');
                }

            });

            $("#searchBtn").click(function(){
                var SearchBy = $("#SearchBy").val();
                var SearchValue = $("#form1").val();
                var SetData = $("#orders-row");

                SetData.html("")

                console.log(SearchValue);

                $.ajax({
                    type: "POST",
                    url: "/Order/GetSearchingData?SearchBy=" + SearchBy + "&SearchValue=" + SearchValue,
                    contentType: "html",
                    success: function (results){
                        SetData.html(results);
                    }
                })
            })

        });
    </script>
}
